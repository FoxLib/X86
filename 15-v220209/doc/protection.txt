ПРИНЦИПЫ
--------------------------------------------------------------------------------

Существует два вида уровня привелегии:

    SU - Super User
    US - User Space

Для SU доступны все инструкции управления. Переключение между режимаи происходит
через команду:

    ENTER mode
 
mode - 0 вход в режим SU, 1 - в US. 

Если происходит вход в режим SU из US, то переключается на стек 0, пишется туда

    push    sp
    push    flags       ; Флаги пользователя
    push    ip          ; Последний адрес
    
И переходит по адресу, указанному в Interrupt:0
В стек 0 записывается предыдущий sp.

Если переход между одинаковыми режимами, то ничего не происходит.

При переходе из 1 в 0, из стека 0 извлекается 

    pop     new_ip
    pop     new_flags
    pop     new_sp
    
И переходит по ним, после чего переключает стек на новый. 

ПРЕРЫВАНИЯ
--------------------------------------------------------------------------------

Прерывания устанавливаются через инструкцию

    INTERRUPT ra

HEX     Назначение
00      Переход из ENTER в режиме US->SU
01      Исключение защиты памяти
10      Прерывание таймера
11      Прерывание клавиатуры

ПАМЯТЬ
--------------------------------------------------------------------------------

Для программы, выполняющейся в userspace, недоступно ничего, кроме той области,
которая выделена для нее SU

    LIMIT   ra, rb, rc
    
Устанавливаются база ra, лимит rb и rc - адрес таблицы страниц.

При этом младшие 2 бита системные. 

Бит 0 - таблица страниц активирована
Бит 1 - зарезервировано

Таблица трансляции работает для ЛИНЕЙНОГО адреса, то есть, для того, который
находится в базе ra. 4 кб = 4 байта.

Каждые 4 байта описывает, где находится физическая страница в памяти. Младшие 
12 бит доступны для записи SU. В данный момент пока что никак не реализованы.

СТЕК, РЕГИСТРЫ
--------------------------------------------------------------------------------
Стек SU находится в специальной памяти
Стек US находится в памяти, куда указывает системный регистр USP:

    LOADSP ra -- загружает этот адрес

То есть, стековые операции для us медленнее, поскольку пишут и читают в общую память.

Регистры для us можно загрузить и выгрузить из памяти.

    EXPORT выгружает регистры в память
    IMPORT загружает регистры из памяти

Адрес памяти берется со стека через POP()

    ; Переключение контекста
    PUSH    old_ip
    PUSH    old_fl
    PUSH    old_sp
    PUSH    ring1reg
    PUSH    ring0reg
    LOADSP  r0              ; Где находится стек us
    EXPORT                  ; 1k тактов 
    IMPORT                  ; 1k тактов
    ENTER   1               ; Вход в режим us

Переключение контекста дорогостоящая операция.